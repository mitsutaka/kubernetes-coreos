#cloud-config

ssh_authorized_keys:
- # your public key

write_files:
  - path: /etc/flannel/options.env
    content: |
      FLANNELD_IFACE=$private_ipv4
      FLANNELD_ETCD_ENDPOINTS=http://$private_ipv4:2379
  - path: /etc/kubernetes/manifests/kube-apiserver.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-apiserver
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-apiserver
          image: quay.io/coreos/hyperkube:v1.5.2_coreos.2
          command:
          - /hyperkube
          - apiserver
          - --insecure-bind-address=0.0.0.0
          - --etcd-servers=http://$private_ipv4:2379
          - --allow-privileged=true
          - --service-cluster-ip-range=10.3.0.0/24
          - --secure-port=0
          - --advertise-address=$private_ipv4
          - --admission-control=NamespaceLifecycle,LimitRanger,DefaultStorageClass,ResourceQuota
          - --runtime-config=extensions/v1beta1=true,extensions/v1beta1/networkpolicies=true,batch/v2alpha1=true
          ports:
          - containerPort: 8080
            hostPort: 8080
            name: local
  - path: /etc/kubernetes/manifests/kube-controller-manager.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-controller-manager
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-controller-manager
          image: quay.io/coreos/hyperkube:v1.5.2_coreos.2
          command:
          - /hyperkube
          - controller-manager
          - --master=http://127.0.0.1:8080
          - --leader-elect=true
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 10252
            initialDelaySeconds: 15
            timeoutSeconds: 1
  - path: /etc/kubernetes/manifests/kube-scheduler.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-scheduler
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-scheduler
          image: quay.io/coreos/hyperkube:v1.5.2_coreos.2
          command:
          - /hyperkube
          - scheduler
          - --master=http://127.0.0.1:8080
          - --leader-elect=true
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 10251
            initialDelaySeconds: 15
            timeoutSeconds: 1
  - path: /etc/kubernetes/manifests/kube-proxy.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: kube-proxy
        namespace: kube-system
      spec:
        hostNetwork: true
        containers:
        - name: kube-proxy
          image: quay.io/coreos/hyperkube:v1.5.2_coreos.2
          command:
          - /hyperkube
          - proxy
          - --master=http://127.0.0.1:8080
          - --hostname-override=$private_ipv4
          - --proxy-mode=iptables
          securityContext:
            privileged: true
  - path: /etc/kubernetes/manifests/calico-policy-controller.yaml
    content: |
      apiVersion: v1
      kind: Pod
      metadata:
        name: calico-policy-controller
        namespace: calico-system
      spec:
        hostNetwork: true
        containers:
          - name: k8s-policy-controller
            image: calico/kube-policy-controller:latest
            env:
              - name: ETCD_ENDPOINTS
                value: "http://$private_ipv4:2379"
              - name: K8S_API
                value: "http://127.0.0.1:8080"
              - name: LEADER_ELECTION
                value: "true"
          - name: leader-elector
            image: quay.io/calico/leader-elector:v0.1.0
            imagePullPolicy: IfNotPresent
            args:
              - "--election=calico-policy-election"
              - "--election-namespace=calico-system"
              - "--http=127.0.0.1:4040"
  - path: /etc/kubernetes/cni/net.d/10-calico.conf
    content: |
      {
          "name": "calico",
          "type": "flannel",
          "delegate": {
              "type": "calico",
              "etcd_endpoints": "http://$private_ipv4:2379",
              "log_level": "none",
              "log_level_stderr": "info",
              "hostname": "$private_ipv4",
              "policy": {
                  "type": "k8s",
                  "k8s_api_root": "http://127.0.0.1:8080/api/v1/"
              }
          }
      }

coreos:
  etcd2:
    discovery: # your discovery URL
    advertise-client-urls: http://$private_ipv4:2379
    initial-advertise-peer-urls: http://$private_ipv4:2380
    listen-client-urls: http://0.0.0.0:2379
    listen-peer-urls: http://$private_ipv4:2380
  fleet:
    public-ip: $private_ipv4
  units:
    - name: down-interfaces.service
      command: start
      content: |
        [Service]
        Type=oneshot
        ExecStart=/usr/bin/ip link set ens192 down
        ExecStart=/usr/bin/ip addr flush dev ens192
    - name: systemd-networkd.service
      command: restart
    - name: swap.service
      command: start
      content: |
        [Unit]
        Description=Turn on swap
        
        [Service]
        Type=oneshot
        Environment="SWAP_PATH=/var/vm" "SWAP_FILE=swapfile1"
        ExecStartPre=-/usr/bin/rm -rf ${SWAP_PATH}
        ExecStartPre=/usr/bin/mkdir -p ${SWAP_PATH}
        ExecStartPre=/usr/bin/touch ${SWAP_PATH}/${SWAP_FILE}
        ExecStartPre=/bin/bash -c "fallocate -l 1024m ${SWAP_PATH}/${SWAP_FILE}"
        ExecStartPre=/usr/bin/chmod 600 ${SWAP_PATH}/${SWAP_FILE}
        ExecStartPre=/usr/sbin/mkswap ${SWAP_PATH}/${SWAP_FILE}
        ExecStartPre=/usr/sbin/sysctl vm.swappiness=10
        ExecStart=/sbin/swapon ${SWAP_PATH}/${SWAP_FILE}
        ExecStop=/sbin/swapoff ${SWAP_PATH}/${SWAP_FILE}
        ExecStopPost=-/usr/bin/rm -rf ${SWAP_PATH}
        RemainAfterExit=true
        
        [Install]
        WantedBy=multi-user.target
    - name: etcd2.service
      command: start
    - name: fleet.service
      command: start
    - name: rpc-statd.service
      command: start
    - name: flanneld.service
      command: start
      drop-ins:
        - name: 50-network-config.conf
          content: |
            [Service]
            ExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{ "Network": "10.2.0.0/16", "Backend": { "Type": "vxlan"}}'
            ExecStartPre=/usr/bin/ln -sf /etc/flannel/options.env /run/flannel/options.env
    - name: docker.service
      command: start
      drop-ins:
        - name: 40-flannel.conf
          content: |
            [Unit]
            Requires=flanneld.service
            After=flanneld.service
    - name: kubelet.service
      command: start
      content: |
        [Service]
        ExecStartPre=/usr/bin/mkdir -p /etc/kubernetes/manifests
        ExecStartPre=/usr/bin/mkdir -p /var/log/containers
        
        Environment=KUBELET_VERSION=v1.5.2_coreos.2
        Environment="RKT_OPTS=--volume var-log,kind=host,source=/var/log \
          --mount volume=var-log,target=/var/log \
          --volume dns,kind=host,source=/etc/resolv.conf \
          --mount volume=dns,target=/etc/resolv.conf"
        
        ExecStart=/usr/lib/coreos/kubelet-wrapper \
          --api-servers=http://127.0.0.1:8080 \
          --network-plugin-dir=/etc/kubernetes/cni/net.d \
          --network-plugin=cni \
          --register-schedulable=true \
          --allow-privileged=true \
          --pod-manifest-path=/etc/kubernetes/manifests \
          --hostname-override=$private_ipv4 \
          --cluster-dns=10.3.0.10 \
          --cluster-domain=cluster.local
        Restart=always
        RestartSec=10
        [Install]
        WantedBy=multi-user.target
    - name: calico-node.service
      command: start
      content: |
        [Unit]
        Description=Calico per-host agent
        Requires=network-online.target
        After=network-online.target
        
        [Service]
        Slice=machine.slice
        Environment=CALICO_DISABLE_FILE_LOGGING=true
        Environment=HOSTNAME=$private_ipv4
        Environment=IP=$private_ipv4
        Environment=FELIX_FELIXHOSTNAME=$private_ipv4
        Environment=CALICO_NETWORKING=false
        Environment=NO_DEFAULT_POOLS=true
        Environment=ETCD_ENDPOINTS=http://$private_ipv4:2379
        ExecStart=/usr/bin/rkt run --inherit-env --stage1-from-dir=stage1-fly.aci \
        --volume=modules,kind=host,source=/lib/modules,readOnly=false \
        --mount=volume=modules,target=/lib/modules \
        --volume=dns,kind=host,source=/etc/resolv.conf,readOnly=true \
        --mount=volume=dns,target=/etc/resolv.conf \
        --trust-keys-from-https quay.io/calico/node:v0.19.0
        
        KillMode=mixed
        Restart=always
        TimeoutStartSec=0
        
        [Install]
        WantedBy=multi-user.target
